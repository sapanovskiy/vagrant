
Skip to content
Pull requests
Issues
Marketplace
Explore
@sapanovskiy

2
3

    3

radamanth/joomla-ansible
Code
Issues 0
Pull requests 1
Projects 0
Security
Insights
joomla-ansible/tasks/main.yml
@radamanth radamanth Append Mysql user privilege b9761a8 on 2 Oct 2015
218 lines (172 sloc) 5.75 KB
---
# tasks file for joomla-ansible/
# Prerequisites
- name: install Joomla dependcies
  apt: name={{item}} update-cache=yes
  with_items:
  - apache2
  - libapache2-mod-suphp
  - unzip
  - apache2-suexec
  - libapache2-mod-fcgid
  - php5-cgi
  - libapache2-mod-auth-mysql
  - php5-mysql
  tags:
  - joomla

# Enable and start apache
- name: Create apache2 ssl Directory
  file: path=/etc/apache2/ssl state=directory owner=root group=root mode=0755
  tags:
  - joomla

- name: Create self-signed certificate.
  command: openssl req -new -nodes -x509 -subj "{{ joomla_self_signed_cert_subj }}" -days 3650 -keyout /etc/apache2/ssl/{{joomla_site_name}}.key -out /etc/apache2/ssl/{{joomla_site_name}}.crt -extensions v3_ca
    creates=/etc/apache2/ssl/{{joomla_site_name}}.key
  tags:
  - joomla


- name: Dismod phph5 for suphp and fcgid
  command : a2dismod php5
  tags:
  - joomla

- name: Enable mod for apache2
  command: a2enmod {{item}}
  with_items:
  - rewrite
  - suexec
  - include
  - fcgid
  - suphp
  - headers
  - proxy
  - proxy_http
  - ssl
  tags:
  - joomla


- name: edit /etc/php5/cgi/php.ini for fcgid
  replace: dest=/etc/php5/cgi/php.ini regexp="^;cgi\.fix_pathinfo=1$" replace="cgi.fix_pathinfo=1" backup=yes
  tags:
  - joomla

- name: Template supÄ¥p conf file
  template: src="suphp.conf" dest="/etc/suphp/suphp.conf"
  tags:
  - joomla

- name: restart apache 2
  service: name=apache2 state=restarted
  tags:
  - joomla

# Get Joomla
- debug: var=joomla_deploy_from_web

- debug: var=joomla_force_reinstall

- debug: msg="Will reinstall from scratch"
  when: joomla_force_reinstall == true

- debug: msg="Will NOT reinstall from scratch"
  when: joomla_force_reinstall == false



- name: Set reinstall to yes
  set_fact:
    j_force_param_str: "yes"
  when: joomla_force_reinstall

- name: Set reinstall to no
  set_fact:
    j_force_param_str: "no"
  when: joomla_force_reinstall == false

- debug: var

- name: Download Joomla
  get_url: url="{{joomla_dist_url}}" dest="~/joomla.zip" force="{{j_force_param_str}}"
  when: joomla_deploy_from_web == true
  tags:
  - joomla

- name: If joomla_deploy_from_web is false get the dist from local files directory
  copy: src="{{joomla_dist_url}}" dest="~/joomla.zip" force="{{j_force_param_str}}"
  when:  joomla_deploy_from_web == false
  tags:
  - joomla

- name: erase joomla_install_dir content if joomla_force_reinstall is true
  file: path="{{joomla_install_dir}}" state="absent"
  when: joomla_force_reinstall == true

- name: Ensure destination dir exists
  file: path="{{joomla_install_dir}}" state="directory"  owner="{{joomla_site_owner}}" group="{{joomla_site_group}}" mode=0775 recurse=yes
  tags:
  - joomla

- name: Unarchive Joomla
  unarchive: copy=no src="~/joomla.zip" dest="{{joomla_install_dir}}" owner="{{joomla_site_owner}}" group="{{joomla_site_group}}" mode=0775
  tags:
  - joomla

- name: copy test SUPHP file
  copy: src="testSUPHP.php" dest="{{joomla_install_dir}}/testSUPHP.php" owner="{{joomla_site_owner}}" group="{{joomla_site_group}}" mode=0775
  tags:
  - joomla

# Creating Databases and users
- name: Template initial data
  template: src="{{item.path}}" dest="~/{{item.name}}"
  with_items:
  - "{{joomla_inject_sql_files}}"
  tags:
  - joomla
  when: joomla_inject_sql == true

- name: Template addAdmin.sql
  template: src=admin.sql dest="~/{{joomla_mysql_db_name}}_admin.sql"
  tags:
  - joomla

- name: Drop database if joomla_force_reinstall is true
  mysql_db: name="{{joomla_mysql_db_name}}" login_user="root" login_password="{{joomla_mysql_root_passwd}}" state=absent
  when: joomla_force_reinstall == true

- name: Create mysql joomla database
  mysql_db: encoding="utf8" login_user="root" login_password="{{joomla_mysql_root_passwd}}" name="{{joomla_mysql_db_name}}" state=present
  tags:
  - joomla

- name: Determine if import has already been done
  shell: mysql -e  'show tables;' {{joomla_mysql_db_name}}
  register: db_created
  changed_when: "( db_created.stdout.find('{{joomla_site_dbprefix}}') == -1 )"
  tags:
  - joomla

- debug: var=db_created
  tags:
  - joomla

- name: Import initial data in  mysql joomla database
  mysql_db: encoding="utf8" login_user="root" login_password="{{joomla_mysql_root_passwd}}" name="{{joomla_mysql_db_name}}" target="~/{{item.name}}" state=import
  with_items:
  - "{{joomla_inject_sql_files}}"
  when: db_created.changed and joomla_inject_sql == true
  tags:
  - joomla

- name: Create admin user in  mysql joomla database
  mysql_db: encoding="utf8" login_user="root" login_password="{{joomla_mysql_root_passwd}}" name="{{joomla_mysql_db_name}}" target="~/{{joomla_mysql_db_name}}_admin.sql" state=import
  ignore_errors: yes
  tags:
  - joomla


- name: Delete admin.sql
  file: path="~/{{joomla_mysql_db_name}}_admin.sql" state="absent"
  tags:
  - joomla


- name: Delete installation dir
  file: path="{{joomla_install_dir}}/installation" state="absent"
  tags:
  - joomla
  when: joomla_delete_installation_dir ==  true

- name: Create joomla DB user
  mysql_user: name="{{joomla_mysql_admin_user}}" password="{{joomla_mysql_admin_passwd}}" priv="{{joomla_mysql_db_name}}.*:ALL" state="present" append_privs=yes
  tags:
  - joomla

- name: restart mysql
  service: name=mysql state=restarted
  tags:
  - joomla


# install Joomla
- name: template configuration file
  template: src="configuration.php" dest="{{joomla_install_dir}}/configuration.php" owner="{{joomla_site_owner}}" group="{{joomla_site_group}}" mode=0764
  tags:
  - joomla

# Apache2 VHOST
- name: Template VHOST
  template: src=joomla.conf.j2 dest="/etc/apache2/sites-available/{{joomla_site_name}}.conf"
  tags:
  - joomla


- name: Enable  VHOST
  command: a2ensite {{joomla_site_name}}.conf
  tags:
  - joomla

- name: restart apache2
  service: name=apache2 state=restarted
  tags:
  - joomla


